// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

package elton_v2

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RegisterNodeRequest struct {
	Id                   *NodeID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNodeRequest) Reset()         { *m = RegisterNodeRequest{} }
func (m *RegisterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeRequest) ProtoMessage()    {}
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

func (m *RegisterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeRequest.Unmarshal(m, b)
}
func (m *RegisterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeRequest.Marshal(b, m, deterministic)
}
func (m *RegisterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeRequest.Merge(m, src)
}
func (m *RegisterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeRequest.Size(m)
}
func (m *RegisterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeRequest proto.InternalMessageInfo

func (m *RegisterNodeRequest) GetId() *NodeID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *RegisterNodeRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type RegisterNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterNodeResponse) Reset()         { *m = RegisterNodeResponse{} }
func (m *RegisterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterNodeResponse) ProtoMessage()    {}
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

func (m *RegisterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterNodeResponse.Unmarshal(m, b)
}
func (m *RegisterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterNodeResponse.Marshal(b, m, deterministic)
}
func (m *RegisterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterNodeResponse.Merge(m, src)
}
func (m *RegisterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterNodeResponse.Size(m)
}
func (m *RegisterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterNodeResponse proto.InternalMessageInfo

type UnregisterNodeRequest struct {
	Id                   *NodeID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterNodeRequest) Reset()         { *m = UnregisterNodeRequest{} }
func (m *UnregisterNodeRequest) String() string { return proto.CompactTextString(m) }
func (*UnregisterNodeRequest) ProtoMessage()    {}
func (*UnregisterNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{2}
}

func (m *UnregisterNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterNodeRequest.Unmarshal(m, b)
}
func (m *UnregisterNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterNodeRequest.Marshal(b, m, deterministic)
}
func (m *UnregisterNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterNodeRequest.Merge(m, src)
}
func (m *UnregisterNodeRequest) XXX_Size() int {
	return xxx_messageInfo_UnregisterNodeRequest.Size(m)
}
func (m *UnregisterNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterNodeRequest proto.InternalMessageInfo

func (m *UnregisterNodeRequest) GetId() *NodeID {
	if m != nil {
		return m.Id
	}
	return nil
}

type UnregisterNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnregisterNodeResponse) Reset()         { *m = UnregisterNodeResponse{} }
func (m *UnregisterNodeResponse) String() string { return proto.CompactTextString(m) }
func (*UnregisterNodeResponse) ProtoMessage()    {}
func (*UnregisterNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{3}
}

func (m *UnregisterNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnregisterNodeResponse.Unmarshal(m, b)
}
func (m *UnregisterNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnregisterNodeResponse.Marshal(b, m, deterministic)
}
func (m *UnregisterNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnregisterNodeResponse.Merge(m, src)
}
func (m *UnregisterNodeResponse) XXX_Size() int {
	return xxx_messageInfo_UnregisterNodeResponse.Size(m)
}
func (m *UnregisterNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnregisterNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnregisterNodeResponse proto.InternalMessageInfo

type PingNodeRequest struct {
	Id                   *NodeID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingNodeRequest) Reset()         { *m = PingNodeRequest{} }
func (m *PingNodeRequest) String() string { return proto.CompactTextString(m) }
func (*PingNodeRequest) ProtoMessage()    {}
func (*PingNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{4}
}

func (m *PingNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingNodeRequest.Unmarshal(m, b)
}
func (m *PingNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingNodeRequest.Marshal(b, m, deterministic)
}
func (m *PingNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingNodeRequest.Merge(m, src)
}
func (m *PingNodeRequest) XXX_Size() int {
	return xxx_messageInfo_PingNodeRequest.Size(m)
}
func (m *PingNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingNodeRequest proto.InternalMessageInfo

func (m *PingNodeRequest) GetId() *NodeID {
	if m != nil {
		return m.Id
	}
	return nil
}

type PingNodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingNodeResponse) Reset()         { *m = PingNodeResponse{} }
func (m *PingNodeResponse) String() string { return proto.CompactTextString(m) }
func (*PingNodeResponse) ProtoMessage()    {}
func (*PingNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{5}
}

func (m *PingNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingNodeResponse.Unmarshal(m, b)
}
func (m *PingNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingNodeResponse.Marshal(b, m, deterministic)
}
func (m *PingNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingNodeResponse.Merge(m, src)
}
func (m *PingNodeResponse) XXX_Size() int {
	return xxx_messageInfo_PingNodeResponse.Size(m)
}
func (m *PingNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingNodeResponse proto.InternalMessageInfo

type ListNodeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodeRequest) Reset()         { *m = ListNodeRequest{} }
func (m *ListNodeRequest) String() string { return proto.CompactTextString(m) }
func (*ListNodeRequest) ProtoMessage()    {}
func (*ListNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{6}
}

func (m *ListNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeRequest.Unmarshal(m, b)
}
func (m *ListNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeRequest.Marshal(b, m, deterministic)
}
func (m *ListNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeRequest.Merge(m, src)
}
func (m *ListNodeRequest) XXX_Size() int {
	return xxx_messageInfo_ListNodeRequest.Size(m)
}
func (m *ListNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeRequest proto.InternalMessageInfo

type ListNodeResponse struct {
	Id                   *NodeID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Nodes                *Node    `protobuf:"bytes,2,opt,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListNodeResponse) Reset()         { *m = ListNodeResponse{} }
func (m *ListNodeResponse) String() string { return proto.CompactTextString(m) }
func (*ListNodeResponse) ProtoMessage()    {}
func (*ListNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{7}
}

func (m *ListNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListNodeResponse.Unmarshal(m, b)
}
func (m *ListNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListNodeResponse.Marshal(b, m, deterministic)
}
func (m *ListNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListNodeResponse.Merge(m, src)
}
func (m *ListNodeResponse) XXX_Size() int {
	return xxx_messageInfo_ListNodeResponse.Size(m)
}
func (m *ListNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListNodeResponse proto.InternalMessageInfo

func (m *ListNodeResponse) GetId() *NodeID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ListNodeResponse) GetNodes() *Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterNodeRequest)(nil), "elton.v2.RegisterNodeRequest")
	proto.RegisterType((*RegisterNodeResponse)(nil), "elton.v2.RegisterNodeResponse")
	proto.RegisterType((*UnregisterNodeRequest)(nil), "elton.v2.UnregisterNodeRequest")
	proto.RegisterType((*UnregisterNodeResponse)(nil), "elton.v2.UnregisterNodeResponse")
	proto.RegisterType((*PingNodeRequest)(nil), "elton.v2.PingNodeRequest")
	proto.RegisterType((*PingNodeResponse)(nil), "elton.v2.PingNodeResponse")
	proto.RegisterType((*ListNodeRequest)(nil), "elton.v2.ListNodeRequest")
	proto.RegisterType((*ListNodeResponse)(nil), "elton.v2.ListNodeResponse")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_0c843d59d2d938e7) }

var fileDescriptor_0c843d59d2d938e7 = []byte{
	// 283 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0x41, 0x4b, 0x84, 0x40,
	0x1c, 0xc5, 0x51, 0x2c, 0x96, 0x27, 0xb4, 0x36, 0xd5, 0x62, 0x42, 0x25, 0x43, 0x87, 0x4e, 0x12,
	0xee, 0xa9, 0x43, 0x74, 0xe9, 0xb2, 0x10, 0x15, 0x46, 0x97, 0xba, 0x95, 0x7f, 0x96, 0x81, 0x70,
	0xcc, 0x99, 0x16, 0xfa, 0x48, 0x7d, 0xcb, 0x18, 0x75, 0x19, 0x57, 0x14, 0x6a, 0x8f, 0xce, 0x7b,
	0xef, 0xa7, 0xfc, 0x1c, 0xa0, 0x90, 0x39, 0x25, 0x65, 0x25, 0xb5, 0x64, 0x13, 0xfa, 0xd0, 0xb2,
	0x48, 0x56, 0x69, 0xe4, 0xeb, 0xef, 0x92, 0x54, 0x73, 0xcc, 0x5f, 0x71, 0x90, 0xd1, 0x52, 0x28,
	0x4d, 0xd5, 0xbd, 0xcc, 0x29, 0xa3, 0xcf, 0x2f, 0x52, 0x9a, 0xc5, 0x70, 0x45, 0x1e, 0x3a, 0xb1,
	0x73, 0xe1, 0xa7, 0x41, 0xb2, 0x9e, 0x26, 0xa6, 0xb2, 0xb8, 0xcd, 0x5c, 0x91, 0x33, 0x0e, 0xcf,
	0xd0, 0x43, 0xb7, 0xee, 0xec, 0x6d, 0x76, 0xb2, 0x3a, 0xe3, 0x33, 0x1c, 0x6e, 0xc2, 0x55, 0x29,
	0x0b, 0x45, 0xfc, 0x0a, 0x47, 0xcf, 0x45, 0xb5, 0xcd, 0x6b, 0x79, 0x88, 0x59, 0x7f, 0xda, 0x42,
	0xe7, 0x98, 0x3e, 0x8a, 0x62, 0xf9, 0x3f, 0x1c, 0x43, 0x60, 0x47, 0x2d, 0x68, 0x1f, 0xd3, 0x3b,
	0xa1, 0x74, 0x07, 0xc4, 0x5f, 0x10, 0xd8, 0xa3, 0xa6, 0xf6, 0x07, 0x45, 0xe7, 0xd8, 0x31, 0x1a,
	0xd4, 0x88, 0xa3, 0x26, 0x4c, 0x7f, 0x5c, 0xf8, 0xe6, 0xf9, 0x89, 0xaa, 0x95, 0x78, 0x27, 0xb6,
	0xc0, 0x64, 0x2d, 0x8d, 0x9d, 0xd8, 0xc9, 0xc0, 0x5f, 0x8a, 0x4e, 0xc7, 0xe2, 0xf6, 0x13, 0x1f,
	0x00, 0x2b, 0x8b, 0x9d, 0xd9, 0xf6, 0xa0, 0xfd, 0x28, 0x1e, 0x2f, 0xb4, 0xc0, 0x6b, 0x78, 0x46,
	0x17, 0x3b, 0xb6, 0xcd, 0x9e, 0xf3, 0x28, 0x1a, 0x8a, 0xda, 0xf9, 0x0d, 0x3c, 0xa3, 0xb1, 0x3b,
	0xef, 0x99, 0xee, 0xce, 0xfb, 0xc6, 0x2f, 0x9d, 0xb7, 0xdd, 0xfa, 0xd2, 0xce, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x91, 0x03, 0xfa, 0xbe, 0xd9, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeServiceClient is the client API for NodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeServiceClient interface {
	// クラスタに参加するときや、ノードの構成変更をしたときに呼び出すAPI。
	// ノードの情報を登録・更新をする。
	Register(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error)
	// クラスタから脱退するときに呼び出すAPI。
	// ノードの退避処理を行い、ノードの情報を削除する。
	Unregister(ctx context.Context, in *UnregisterNodeRequest, opts ...grpc.CallOption) (*UnregisterNodeResponse, error)
	// ノードが生存していることをcontrollerに通知する。
	Ping(ctx context.Context, in *PingNodeRequest, opts ...grpc.CallOption) (*PingNodeResponse, error)
	// 全ノードの一覧を取得する。
	List(ctx context.Context, in *ListNodeRequest, opts ...grpc.CallOption) (NodeService_ListClient, error)
}

type nodeServiceClient struct {
	cc *grpc.ClientConn
}

func NewNodeServiceClient(cc *grpc.ClientConn) NodeServiceClient {
	return &nodeServiceClient{cc}
}

func (c *nodeServiceClient) Register(ctx context.Context, in *RegisterNodeRequest, opts ...grpc.CallOption) (*RegisterNodeResponse, error) {
	out := new(RegisterNodeResponse)
	err := c.cc.Invoke(ctx, "/elton.v2.NodeService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) Unregister(ctx context.Context, in *UnregisterNodeRequest, opts ...grpc.CallOption) (*UnregisterNodeResponse, error) {
	out := new(UnregisterNodeResponse)
	err := c.cc.Invoke(ctx, "/elton.v2.NodeService/Unregister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) Ping(ctx context.Context, in *PingNodeRequest, opts ...grpc.CallOption) (*PingNodeResponse, error) {
	out := new(PingNodeResponse)
	err := c.cc.Invoke(ctx, "/elton.v2.NodeService/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeServiceClient) List(ctx context.Context, in *ListNodeRequest, opts ...grpc.CallOption) (NodeService_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NodeService_serviceDesc.Streams[0], "/elton.v2.NodeService/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &nodeServiceListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NodeService_ListClient interface {
	Recv() (*ListNodeResponse, error)
	grpc.ClientStream
}

type nodeServiceListClient struct {
	grpc.ClientStream
}

func (x *nodeServiceListClient) Recv() (*ListNodeResponse, error) {
	m := new(ListNodeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NodeServiceServer is the server API for NodeService service.
type NodeServiceServer interface {
	// クラスタに参加するときや、ノードの構成変更をしたときに呼び出すAPI。
	// ノードの情報を登録・更新をする。
	Register(context.Context, *RegisterNodeRequest) (*RegisterNodeResponse, error)
	// クラスタから脱退するときに呼び出すAPI。
	// ノードの退避処理を行い、ノードの情報を削除する。
	Unregister(context.Context, *UnregisterNodeRequest) (*UnregisterNodeResponse, error)
	// ノードが生存していることをcontrollerに通知する。
	Ping(context.Context, *PingNodeRequest) (*PingNodeResponse, error)
	// 全ノードの一覧を取得する。
	List(*ListNodeRequest, NodeService_ListServer) error
}

// UnimplementedNodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServiceServer struct {
}

func (*UnimplementedNodeServiceServer) Register(ctx context.Context, req *RegisterNodeRequest) (*RegisterNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}
func (*UnimplementedNodeServiceServer) Unregister(ctx context.Context, req *UnregisterNodeRequest) (*UnregisterNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unregister not implemented")
}
func (*UnimplementedNodeServiceServer) Ping(ctx context.Context, req *PingNodeRequest) (*PingNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedNodeServiceServer) List(req *ListNodeRequest, srv NodeService_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterNodeServiceServer(s *grpc.Server, srv NodeServiceServer) {
	s.RegisterService(&_NodeService_serviceDesc, srv)
}

func _NodeService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elton.v2.NodeService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Register(ctx, req.(*RegisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_Unregister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnregisterNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Unregister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elton.v2.NodeService/Unregister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Unregister(ctx, req.(*UnregisterNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServiceServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/elton.v2.NodeService/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServiceServer).Ping(ctx, req.(*PingNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NodeService_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListNodeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NodeServiceServer).List(m, &nodeServiceListServer{stream})
}

type NodeService_ListServer interface {
	Send(*ListNodeResponse) error
	grpc.ServerStream
}

type nodeServiceListServer struct {
	grpc.ServerStream
}

func (x *nodeServiceListServer) Send(m *ListNodeResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _NodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "elton.v2.NodeService",
	HandlerType: (*NodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _NodeService_Register_Handler,
		},
		{
			MethodName: "Unregister",
			Handler:    _NodeService_Unregister_Handler,
		},
		{
			MethodName: "Ping",
			Handler:    _NodeService_Ping_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _NodeService_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "node.proto",
}
