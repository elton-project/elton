syntax = "proto3";
package elton.v2;
import "types.proto";


// ノード管理を行うサービス。
service NodeService {
    // クラスタに参加するときや、ノードの構成変更をしたときに呼び出すAPI。
    // ノードの情報を登録・更新をする。
    rpc Register (RegisterNodeRequest) returns (RegisterNodeResponse);
    // クラスタから脱退するときに呼び出すAPI。
    // ノードの退避処理を行い、ノードの情報を削除する。
    rpc Unregister (UnregisterNodeRequest) returns (UnregisterNodeResponse);
    // ノードが生存していることをcontrollerに通知する。
    rpc Ping (PingNodeRequest) returns (PingNodeResponse);
    // 全ノードの一覧を取得する。
    rpc List (ListNodeRequest) returns (stream ListNodeResponse);
}


message RegisterNodeRequest {
    NodeID id = 1;
    Node node = 2;
}
message RegisterNodeResponse {}
message UnregisterNodeRequest {
    NodeID id = 1;
}
message UnregisterNodeResponse {}
message PingNodeRequest {
    NodeID id = 1;
}
message PingNodeResponse {}
message ListNodeRequest {}
message ListNodeResponse {
    NodeID id = 1;
    Node nodes = 2;
}
