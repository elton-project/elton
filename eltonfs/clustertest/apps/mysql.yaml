version: 1
name: elton-fs-app-mysql
specs:
  - type: proxmox-ve
    name: pve
    proxmox:
      address: https://elton-pve.internal.t-lab.cs.teu.ac.jp:8006/
      account:
        user: clustertest@pve
        password: waiphaefiRaiph5ing7o
      fingerprint: 2C:CF:88:33:C6:56:2C:76:21:56:07:AB:02:E5:4F:1B:41:A3:CB:F1:49:6F:D9:CE:05:73:EE:33:89:08:3C:29
    address_pools:
      - start_address: 192.168.189.55
        end_address: 192.168.189.69
        cidr: 24
        gateway: 192.168.189.1
      - start_address: 192.168.189.75
        end_address: 192.168.189.89
        cidr: 24
        gateway: 192.168.189.1
      - start_address: 192.168.189.130
        end_address: 192.168.189.149
        cidr: 24
        gateway: 192.168.189.1
    user:
      user: root
      ssh_public_key: |
        ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCz2CNhpZjPTf9Kp/rynfb5kzVYM7Hb2rXLZhJZ1IDyHYAsxAeTuQGQqvwX8CoVWwoU+ltCt+Ce2dqWIbSJD6R4ce30CNLC30UiXhXHPopBJAFQQolbI8/e65gYuwDDs8/DAkQRtn6tFxM3I+4Z5sRURH21rNZPQDKofE1tDcfyb/R6Kvvcl+D2e7gsuPj5FXaxoS3DQsNuvPHFeEfDPy+Tu6YtmYy3rxS4YzGxaOeWjlk3LA/iRzqMsKove1lUGBmD8a0s7f4S7A+Atc7JG76YX6NDnrFX+Cxde978q0bcRD2SG4IE98/B9uzfEcPBL6TEc9uE1PsDGDNxTW1Ya0Hf yuuki@tagoken-desktop1
        ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDaUKxnmDKRVwCZE7UoZWbhOD2Lrnm61Z+fCuphdqsX9502Fk4L1yoETRg/SEOxkY2gmYtyU+9o5EDfXxFEVmMD0DpoWiXFvvyXz+tFT6lHPRMs7jI5dnWoVD1Vq03EKm6OgPNd9TF4qFK/vLi0L3vsSoRP9C6oQQfXt/VwMPbKPqLXp2yOq9RZPGShIH8D9osGE1iF00SNllxNENmFHUxW/gpux8u8mGR0IFJ5o7F2+oZiLgosdyiVQR7lPgSNJv8WE7+XBo8Pbih8cmElR9D+SMoEip3/cOLOncR3laX6MCfwyw0yNOEL3vXPEY2OEUExg68Cb/n+DTSnnNsmVa31 yuuki@gate-worker
    vms:
      vm:
        template: template-ubuntu-19.04-ltp
        pool: clustertest
        nodes: 1
        processors: 2
        memory_size: 2048
        storage_size: 10
        scripts:
          before:
            type: remote-shell
            commands:
              # Install kernel module.
              - 'until apt install -y build-essential; do sleep 1; done'
              - 'git clone --depth=1 https://gitlab.t-lab.cs.teu.ac.jp/yuuki/elton.git'
              - 'cd elton && make build'
              - 'cd elton && make install'
              - 'cd elton/eltonfs && make mount'
              # Start mysql
              - docker run -dv /mnt/mysql-data:/var/lib/mysql -e MYSQL_ALLOW_EMPTY_PASSWORD=1 --name mysql mysql:8.0
              # Wait for mysql to start.
              # The mysqld does not listen TCP port during mysql initialization. But mysql listening to the socket.
              # For prevent false detection of health check, specify connection protocol.
              - |
                for i in $(seq 30); do
                  if docker exec mysql mysql --protocol tcp --user=root --batch -e 'SELECT 1'; then
                    echo connected
                    exit 0
                  fi
                done
                echo timeout
                echo ===================
                echo MySQL logs
                docker logs mysql
                eixt 1
          main:
            type: remote-shell
            commands:
              - docker exec mysql mysql --user=root --batch -e 'CREATE DATABASE db;'
              - docker exec mysql mysql --user=root --batch --database=db -e 'CREATE TABLE tb(id INTEGER PRIMARY KEY);'
              - docker exec mysql mysql --user=root --batch --database=db -e 'INSERT tb VALUES(0), (1), (2);'
              - docker exec mysql mysql --user=root --batch --database=db -e 'SELECT * FROM tb;'
              - docker exec mysql mysql --user=root --batch --database=db -e 'UPDATE tb SET id=3 WHERE id=0;'
              - docker exec mysql mysql --user=root --batch --database=db -e 'SELECT * FROM tb;'
          after:
            type: remote-shell
            commands:
              - docker logs mysql
              - find /mnt -ls
              - df /mnt
